services:
  db:
    container_name: pharmaplug_db
    image: postgres:14
    volumes:
      - pharmaplug-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./backend/pharmaplug/.env

  backend:
    container_name: pharmaplug_backend
    build:
      context: ./
      dockerfile: ./backend/pharmaplug/dockerfile
    volumes:
      - ./backend/pharmaplug:/home/pharmaplug_backend/src
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/pharmaplug/db.sqlite3:/home/pharmaplug_backend/src/db.sqlite3
    networks:
      - pharmaplug_network
    ports:
      - "8000:8000"

  web:
    container_name: pharmaplug_web
    build:
      context: ./
      dockerfile: ./frontend/pharmplug-web/dockerfile
    volumes:
      - ./frontend/pharmplug-web:/home/pharmaplug_frontend/src
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - pharmaplug_network
    ports:
      - "3000:3000"
    
  mobile:
    container_name: pharmaplug_mobile
    build:
      context: ./
      dockerfile: ./frontend/pharmaplug-mobile/dockerfile
    volumes:
      - ./frontend/pharmaplug-mobile:/home/pharmaplug_mobile/src
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - pharmaplug_network
    ports:
      - "8081:8081"

volumes:
  pharmaplug-db-data:

networks:
  pharmaplug_network:
    driver: bridge